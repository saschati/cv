@use 'sass:list' as list;
@use 'sass:map' as map;
@use 'src/styles/core/helpers' as h;

// ============= COLORS =============
$_colors: (
  white: #fff,
  black: #000,
  warm-blue: #4a6c8c,
  warm-white: #f4f4f4,
  warm-black: #1f1f1f,
  pale-blue: #a9c6d9,
  off-white: #f9f9f9,
  deep-blue: #1f3a59,
  ivory-white: #fffff0,
  midnight-blue: #2c3e50,
  antique-white: #faebd7,
  blue-grey: #e3e9f1,
);

/**
 * @param $by {hex, name} default false
 */
@function colors($by: false) {
  @if $by {
    $colors: ();

    @each $name, $color in $_colors {
      $colors: list.append($colors, if($by == hex, $color, h.to-string($name)), comma);
    }

    @return $colors;
  }

  @return $_colors;
}

// ============= COLORS =============

// ============= TEXT SIZES =============
$baseSize: 16px;
$_sizes: (
  // Logo & Title
  (
      name: max,
      size: 2.813rem,
      base: 45px,
    ),
  (
    name: title,
    size: 2.125rem,
    base: 34px,
  ),
  (
    name: logo,
    size: 1.625rem,
    base: 26px,
  ),
  // Body Text & Paragraph
  (
      name: large,
      size: 1.125rem,
      base: 18px,
    ),
  (
    name: regular,
    size: 1rem,
    base: 16px,
  ),
  (
    name: small,
    size: 0.875rem,
    base: 14px,
  ),
  (
    name: caption,
    size: 0.75rem,
    base: 12px,
  )
);

@function sizes($key: false, $value: false) {
  @if $key {
    $sizes: ();

    @each $link in $_sizes {
      $bug: (
        map.get($link, $key): map.get($link, $value),
      );
      $sizes: map.merge($sizes, $bug);
    }

    @return $sizes;
  }

  @return $_sizes;
}

// ============= TEXT SIZES =============

// ============= LINE HEIGHT =============
$lineHeight: 24px;

// ============= LINE HEIGHT =============

// ============= FONTS =============
$_fonts: (
  arimo: (
    'Inconsolata',
    monospace,
  ),
  // ....,,,,,,,,
);

@function fonts($name) {
  @return map.get($_fonts, $name);
}

// ============= FONTS =============
